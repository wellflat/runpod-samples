name: create and publish a docker image

on:
  push:
    branches: ['release']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
    
    outputs:
      image-tags: ${{ steps.meta.outputs.tags }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Generate github token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_PRIVATE_KEY }}
      
      - name: Use token
        run: echo "$GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Login to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          #password: ${{ steps.generate_token.outputs.token }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=raw, value={{date 'YYYYMMDD-hhmmss'}}-{{sha}}
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          driver-opts: image=moby/buildkit:latest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Set image tags for deploy job
        run: echo "image-tags=${{ steps.meta.outputs.tags }}" >> $GITHUB_OUTPUT

  deploy-to-runpod:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    environment: dev

    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python environments
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          architecture: 'x64'
          cache: pip

      - name: Install dependencies
        run: pip install -r src/requirements.txt

      - name: Deploy image to RunPod Serverless
        run: >
          python src/deploy_serverless.py
          --api_key=${{ secrets.RUNPOD_API_KEY }}
          --registry_auth_id=${{ secrets.REGISTRY_AUTH_ID }}
          --image_name=${{ needs.build-and-push-image.outputs.image-tags }}
          --template_id=${{ vars.TEMPLATE_ID }}
          --template_name=${{ vars.TEMPLATE_NAME }}
          | jq -r '.saveTemplate | to_entries[] | "- " + .key + ": " + (.value | tostring)' >> ${GITHUB_STEP_SUMMARY}
